swagger: '2.0'
info:
  version: '1.0'
  title: Org. API(s)
  termsOfService: 'https://github.com/project-sunbird/sunbird-commons/blob/master/LICENSE'
  contact:
    email: admin@open-sunbird.org
  description: >-
    The Organisation Management API resources perform operations related to management of Organisation on the Sunbird Platform. The basic operations include Creation, Updation,joining ,approving.
  license:
    name: GNU Affero General Public License v3.0
    url: 'https://github.com/project-sunbird/sunbird-commons/blob/master/LICENSE'
host: staging.open-sunbird.org
basePath: /api/org/v1
securityDefinitions:
  auth:
    type: apiKey
    name: api_key
    in: header
schemes:
  - https
consumes:
  - application/json
  - multipart/form-data
  - application/x-www-form-urlencoded
produces:
  - application/json
paths:
  /create:
    post:
      description: >-
          This API is associated with creation of a new Organisation on the Sunbird Platform.
            - The **_/create/_** endpoint executes the "Organization-Create" request based on parameters provided as metadata in the request body.
            - It is mandatory to provide values for parameters marked with *. 
            - Mandatory fields cannot be null or empty.
      summary: Creates a new Organization
      tags:
      - Org. APIs
      operationId: Organization-Create
      produces:
      - application/json
      parameters:
      - name: Body
        in: body
        required: true
        description:  >-
            The body refers to the format of the request.
              - The body contains metadata about the new Organisation to be created.
        schema:
          $ref: '#/definitions/OrganizationCreaterequest'
      - name: Accept
        in: header
        required: true
        type: string
        description: '**Accept** relates to content-Type such as **"MIME"**, Its used in response body for executing different multi purpose operations.Therefore, its important that the server is correctly set up, so that the MIME types transmitted are recognised and correct to determine what action to do when a resource is fetched.'
      - name: Content-Type
        in: header
        required: true
        type: string
        description: >-
            The Content Type entity is the media type of the resource.Possible media types can be:- 
              - Application/json
              - Multipart/form-data
              - Application/x-www-form-urlencoded
      - name: ts
        in: header
        required: true
        type: string
        description: 'Time Stamp at which **Create Organisation** request was sent.'
      - name: locationId
        in: header
        required: false
        type: string
        description: 'Uniquely Identifies the location of an organisation'      
      - name: X-msgid
        in: header
        required: true
        type: string
        description: 'This Id Uniquely identifies a request if the same API is executed multiple times.'
      - name: X-Device-ID
        in: header
        required: true
        type: string
        description: 'This Id Uniquely identifies the type of device (Mobile)(desktop) used to access Sunbird. '
      - name: X-Authenticated-Userid
        in: header
        required: true
        type: string
        description: 'The Registered User Id to execute the API.'
      - name: Authorization
        in: header
        required: true
        type: string
        description: 'All User APIs require authorization for use. Specify the authorization key received from the administrator when placing the request for use of the API.'
      responses:
        '200':
          description: 'OK ! Successful operation."Organization-Create" operation was successfully executed.'
          schema:
            $ref: '#/definitions/ContentCreateResponse'
        '400':
          description: 'BAD REQUEST. The "Organization-Create" operation failed ! The possible reason for failure is that you may have missed providing input for a mandatory parameter.'
          schema:
            $ref: '#/definitions/ContentCreateErrorResponse'
        '500':
          description: 'INTERNAL SERVER ERROR ! Looks like something went wrong! We track these errors automatically, but if the problem persists feel free to contact us. In the meantime, try refreshing.'
          schema:
            $ref: '#/definitions/ContentCreateErrorResponse'
      security:
      - auth: []
      x-unitTests:
      - request:
          method: POST
          uri: /org/v1/create
          headers:
            Content-Type: application/json
            Accept: application/json
            X-Consumer-ID: X-Consumer-ID
            ts: 2017-05-25 10:18:56:578+0530
            X-msgid: 8e27cbf5-e299-43b0-bca7-8347f7e5abcf
            X-Device-ID: X-Device-ID
            X-Authenticated-Userid: {user-token} 
            Authorization: Bearer {{api-key}}
          body: "{\n  \"request\":{ \n      \"orgName\": \"Ekstep_12\",\n      \"description\": \"description\",\n       \"externalId\": \"1206\",\n        \"provider\": \"test12\",\n        \"isRootOrg\":true,\n         \"channel\":\"test12\"\n     \n   }\n}\n\n\n"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: NONE
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: Organization-Create
        x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
 definitions:
  $ref: '../apis/test/allschema/schemaforcreate.yaml'
